APPEND mykey "Hello" (appends the value at the end of the string).

· INCR mykey (Increments the number stored at key by one).

· INCRBY mykey 5

· DECR mykey (Decrements the number stored at key by one.)

· DECRBY mykey 3 (Decrements the number stored at key )

· INCRBYFLOAT mykey 0.1(Increment the string representing a floating point number)

· GETSET mycounter "0" (Atomically sets key to value and returns the old value stored at key)

· MSET key1 "Hello" key2 "World" (Sets the given keys to their respective values.)

· MGET key1 key2 (Returns the values of all specified keys).

· SETNX mykey "Hello" (Set key to hold string value if key does not exist.)

· MSETNX key1 "Hello" key2 "there" (Sets the given keys to their respective values.)

· GETRANGE mykey 0 3 (Returns the substring of the string value stored at key).

· GETRANGE mykey -3 -1. (-1 means the last character and so on).

· SETEX mykey 10 "Hello" (Set key to hold the string value and set key to timeout after a given number of seconds.)

· PSETEX mykey 1000 "Hello" ( expire time is specified in milliseconds instead of seconds.)

· SETRANGE key1 6 "Redis" (Overwrites part of the string stored at key) .

· STRLEN mykey ( Returns the length of the string ).




set score 1
incr score
incrby score 5
get score

Decr score
decrby score 4

set num 1.0
incrbyfloat num 1.2
----------------

getset key hello => previously stored value
mset key val1 key1 val2. => multiple keys setting
mget key key1

msetnx 5 hello 6 bye  => key doesnt exists

---------------------------
getrange => extract substring from string

getrange key 0 3 => getrange <key> <start> <end> => right to left not possible

setex <key> <seconds> <value> => sets expiry time

psetx <key> <milliseconds> <value> => expiry in milliseconds

setrange  => override part of string
setrange <key> <offset> <substring>

strlen => returns string length
